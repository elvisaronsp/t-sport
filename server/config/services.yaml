# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    elastic:
        hosts:
            - '%env(ELASTIC_HOST)%'

    env(ELASTIC_HOST): 'elasticsearch:9200'

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $elasticConfig: '%elastic%'

            $queryBus: '@tactician.commandbus.query'
            $commandBus: '@tactician.commandbus.command'
            $eventBus: '@broadway.event_handling.event_bus'

            $eventStore: '@Broadway\EventStore\Dbal\DBALEventStore'

            $eventProducer: '@old_sound_rabbit_mq.events_producer'

    _instanceof:

        App\Application\Command\CommandHandlerInterface:
            public: true
            tags:
                - { name: tactician.handler, typehints: true, bus: command }

        App\Application\Query\QueryHandlerInterface:
            public: true
            tags:
                - { name: tactician.handler, typehints: true, bus: query }

        Broadway\EventHandling\EventListener:
            public: true
            tags:
                - { name: broadway.domain.event_listener }

    App\:
        resource: '../src/*'
        exclude: '../src/**/{Migrations,EventSubscriber}'

    ### Event Store

    Broadway\EventStore\Dbal\DBALEventStore:
        public: true
        arguments:
            - '@doctrine.dbal.default_connection'
            - '@broadway.serializer.payload'
            - '@broadway.serializer.metadata'
            - 'events'
            - true
            - '@broadway.uuid.converter'

    ### UI

#    App\UI\Cli\Command\:
#        resource: '../src/UI/Cli/Command'

    App\UI\Http\Rest\Controller\:
        resource: '../src/UI/Http/Rest/Controller/*'
        tags: [ 'controller.service_arguments' ]

    App\UI\Http\Web\Controller\:
        resource: '../src/UI/Http/Web/Controller/*'
        tags: [ 'controller.service_arguments' ]

    ### UI Listeners

    App\UI\Http\Rest\EventSubscriber\ExceptionSubscriber:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception' }

    App\UI\Http\Rest\EventSubscriber\JsonBodyParserSubscriber:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest', priority: 100 }
